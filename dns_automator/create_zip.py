#!/usr/bin/env python3
import os
import zipfile
import shutil

def create_windows_zip():
    print("üì¶ –°–û–ó–î–ê–ù–ò–ï WINDOWS ZIP –ê–†–•–ò–í–ê")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ EXE —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    exe_path = 'dist/DNSAutomator.exe'
    if not os.path.exists(exe_path):
        print("‚ùå EXE —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏
    temp_dir = 'windows_package'
    if os.path.exists(temp_dir):
        shutil.rmtree(temp_dir)
    os.makedirs(temp_dir)
    
    # –ö–æ–ø–∏—Ä—É–µ–º EXE —Ñ–∞–π–ª
    shutil.copy2(exe_path, os.path.join(temp_dir, 'DNSAutomator.exe'))
    print("‚úÖ EXE —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists('config.json'):
        shutil.copy2('config.json', os.path.join(temp_dir, 'config.json'))
        print("‚úÖ Config —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
    
    # –ö–æ–ø–∏—Ä—É–µ–º README –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π
    readme_path = os.path.join(temp_dir, 'README.txt')
    with open(readme_path, 'w') as f:
        f.write("""DNS Automator - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ DNSAutomator.exe
2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
3. –ù–∞–∂–º–∏—Ç–µ "Run DNS Setup" –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- Windows 7/8/10/11
- –î–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
- API –∫–ª—é—á–∏ –æ—Ç Namecheap

–î–ª—è –ø—Ä–æ–±–ª–µ–º –∏ –≤–æ–ø—Ä–æ—Å–æ–≤:
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ config.json –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ IP –∞–¥—Ä–µ—Å –¥–æ–±–∞–≤–ª–µ–Ω –≤ whitelist Namecheap
""")
    print("‚úÖ README —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω")
    
    # –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
    zip_path = 'DNSAutomator_Windows.zip'
    with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(temp_dir):
            for file in files:
                file_path = os.path.join(root, file)
                arcname = os.path.relpath(file_path, temp_dir)
                zipf.write(file_path, arcname)
                print(f"üì¶ –î–æ–±–∞–≤–ª–µ–Ω –≤ –∞—Ä—Ö–∏–≤: {arcname}")
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    shutil.rmtree(temp_dir)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞
    zip_size = os.path.getsize(zip_path)
    print(f"‚úÖ ZIP –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: {zip_path}")
    print(f"üìä –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: {zip_size:,} –±–∞–π—Ç ({zip_size/1024/1024:.1f} MB)")
    
    return True

if __name__ == "__main__":
    success = create_windows_zip()
    if success:
        print("\n" + "="*60)
        print("üéâ WINDOWS ZIP –ê–†–•–ò–í –ì–û–¢–û–í!")
        print("="*60)
    else:
        print("\n" + "="*60)
        print("‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ê–†–•–ò–í–ê")
        print("="*60)