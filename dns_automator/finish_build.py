#!/usr/bin/env python3
import os
import shutil
import zipfile

def finish_build():
    print("üéØ –ó–ê–í–ï–†–®–ï–ù–ò–ï –°–ë–û–†–ö–ò WINDOWS EXE")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–∑–¥–∞–ª–æ—Å—å
    if os.path.exists('dist/DNSAutomator'):
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤ EXE
        exe_path = 'dist/DNSAutomator.exe'
        os.rename('dist/DNSAutomator', exe_path)
        print(f"‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ: dist/DNSAutomator ‚Üí {exe_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
        file_size = os.path.getsize(exe_path)
        print(f"üìä –†–∞–∑–º–µ—Ä EXE: {file_size:,} –±–∞–π—Ç ({file_size/1024/1024:.1f} MB)")
        
        # –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤
        zip_path = 'DNSAutomator_Windows.zip'
        with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
            zipf.write(exe_path, 'DNSAutomator.exe')
            if os.path.exists('config.json'):
                zipf.write('config.json', 'config.json')
                print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω config.json –≤ –∞—Ä—Ö–∏–≤")
        
        print(f"üì¶ –°–æ–∑–¥–∞–Ω ZIP –∞—Ä—Ö–∏–≤: {zip_path}")
        
        return True
        
    elif os.path.exists('dist/DNSAutomator.exe'):
        print("‚úÖ EXE —Ñ–∞–π–ª —É–∂–µ —Å–æ–∑–¥–∞–Ω: dist/DNSAutomator.exe")
        return True
        
    else:
        print("‚ùå EXE —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        if os.path.exists('dist'):
            files = os.listdir('dist')
            print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ dist: {files}")
        return False

if __name__ == "__main__":
    success = finish_build()
    if success:
        print("\n" + "="*60)
        print("üéâ WINDOWS EXE –ì–û–¢–û–í!")
        print("="*60)
    else:
        print("\n" + "="*60)
        print("‚ùå –ß–¢–û-–¢–û –ü–û–®–õ–û –ù–ï –¢–ê–ö")
        print("="*60)